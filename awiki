#!/usr/bin/env python3 
import os
import glob
from stat import S_ISREG, ST_CTIME, ST_MODE

from flask import Flask,request,url_for,redirect
from wtforms import Form,validators,TextAreaField,StringField
import yaml
import markdown
from jinja2 import Template,FileSystemLoader,Environment

app = Flask(__name__)

class MarkdownFile(object):

    def __init__(self,basename):
        
        self.basename=basename
        self.html=""
        self.markdown=""
        self.meta={"title":""}
    
    def load(self):

        markdown_lines=open('pages/%s/page.md' % self.basename).readlines()
        yaml_lines=[]
        while True:
            yaml_line=markdown_lines.pop(0) 
            if yaml_line.startswith('---'):
                break
            yaml_lines.append(yaml_line)
        self.meta=yaml.load("".join(yaml_lines))
        self.markdown="".join(markdown_lines)
        self.html=markdown.markdown(self.markdown)

    def save(self):

        fp=open(self.basename+'.md','w')
        fp.write(yaml.dump(self.meta))
        fp.write('---\n')
        fp.write(self.markdown)
        fp.close()


@app.route('/view/<string:pagename>')
def view_page(pagename):

    mdf=MarkdownFile(pagename)
    try:
        mdf.load()
    except FileNotFoundError:
        return redirect('/edit/'+pagename) 
    env=Environment(loader=FileSystemLoader('templates'))
    t=env.get_template('page.html')
    return t.render(meta=mdf.meta,content=mdf.html,current=mdf.basename)

class EditForm(Form):
    title=StringField('Title',[validators.required()])
    markdown=TextAreaField('',[validators.required()])
    commit_message=StringField('Commit message',[validators.required()])


@app.route('/edit/<string:pagename>',methods=['GET','POST'])
def edit_page(pagename):

    mdf=MarkdownFile(pagename)
    try:
        mdf.load()
    except FileNotFoundError:
        pass
    env=Environment(loader=FileSystemLoader('templates'))
    if request.method=='POST':
        form=EditForm(request.form)
        if form.validate():
            mdf.meta['title']=form['title'].data
            mdf.markdown='\n'.join(form['markdown'].data.splitlines())
            mdf.save()
            os.system('hg add %s' % mdf.basename+'.md')
            os.system('hg commit %s -m %s' % (mdf.basename+'.md',form['commit_message'].data))
            return redirect('/view/'+pagename)
    else:
        form=EditForm()
        form['title'].process_data(mdf.meta['title'])
        form['markdown'].process_data(mdf.markdown)
    t=env.get_template('edit_page.html')
    return t.render(meta=mdf.meta,content=mdf.html,form=form)

@app.route('/')
def index():
    return redirect('/view/index')

app.run(debug=True)

